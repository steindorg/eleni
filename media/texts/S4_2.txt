/**********************************************************************
 *  readme.txt template                                                   
 *  WordNet
**********************************************************************/

Name: Steindor   
Login:   
Mooshak login:
Hópur:

Partner name: Kristinn    
Partner login:    
Mooshak login:
Hópur:


/**********************************************************************
 *  Describe concisely the data structure(s) you used to store the 
 *  information in synsets.txt. Why did you make this choice?
 **********************************************************************/
We used two hash-maps to store the data one having a key of integers and a bag of strings. The other was a hash-map having a key og string and a bag of integers. 


/**********************************************************************
 *  Describe concisely the data structure(s) you used to store the 
 *  information in hypernyms.txt. Why did you make this choice?
 **********************************************************************/
We used a String array to store the information in hypernyms which we then used to create the graph


/**********************************************************************
 *  Describe concisely the algorithm you used to check if the digraph 
 *  is rooted and the algorithm you used to check if the digrah is a DAG.  
 *  What is the order of growth of the best case 
 *  running time as a function of the number of vertices V and the 
 *  number of edges E in the digraph? And what is the order of growth 
 *  of the worst case running time?
 *
 *  Be careful! It is very easy to get these wrong. Keep in mind
 *  what the 'best case' and 'worst case' entail. Don't forget about
 *  the fact that starting a breadth first search in Java means 
 *  initializing edgeTo[] arrays, etc.
 **********************************************************************/

Description:  


method                               best case = v + e            worst case v + W
------------------------------------------------------------------------
rooted check: To check if the graph was rooted or not we 
used a for loop and an if(!digraph.adj(i).iterator().hasNext())
			{
				count++;
				
			}
if the count was higher then 1 we threw an exception stating that the graph was not rooted.

DAG check
We computed the graph by using directedCycle and then we used  the hasCycle() function in the class to check if it contained a cycle or not.  


/**********************************************************************
 *  Describe concisely your algorithm to compute the shortest ancestral
 *  path in SAP.java? What is the order of growth of the worst-case
 *  running time of your methods as a function of the number of
 *  vertices V and the number of edges E in the digraph? What is the
 *  order of growth of the best-case running time?
 **********************************************************************/

Description: We computed the inputs v and w by using the class BreadthFirstDirectedPaths, then we used a brute force way and used a for loop and checked each node if there was a path from v and w to the incremented i. If there was a path then we calculated the distance using the distTo() function and sumed the values for v and W


method                               best case            worst case
------------------------------------------------------------------------
length(int v, int w)

ancestor(int v, int w)

length(Iterable<Integer> v,
       Iterable<Integer> w)

ancestor(Iterable<Integer> v,
         Iterable<Integer> w)




/**********************************************************************
 *  If you implemented an extra credit optimization describe it here.
 **********************************************************************/


/**********************************************************************
 *  Known bugs / limitations.
 **********************************************************************/


/**********************************************************************
 *  Describe whatever help (if any) that you received.
 *  Don't include readings, lectures, and recitation classes, but do
 *  include any help from people (including course staff, lab TAs,
 *  classmates, and friends) and attribute them by name.
 **********************************************************************/
We got help and some tips from Jóhann Friðgeir Jóhannsson and from Matti dæmatíma kennari.

/**********************************************************************
 *  Describe any serious problems you encountered.                    
 **********************************************************************/


/**********************************************************************
 *  If you worked with a partner, assert below that you followed
 *  the protocol as described on the assignment page. Give one
 *  sentence explaining what each of you contributed.
 **********************************************************************/
Steindór was working more on SAP and part of WordNet put Kristinn worked on Readsynset and readhypernyms and WordNet.  



/**********************************************************************
 *  List any other comments here. Feel free to provide any feedback   
 *  on how much you learned from doing the assignment, and whether    
 *  you enjoyed doing it.                                             
 **********************************************************************/
